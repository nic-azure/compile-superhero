@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300&display=swap');

body {
  font-family: 'Roboto', sans-serif;
  padding: 2em;
}

:disabled {
  color: #39464e;
}


.settingspane {

  &, * {
    box-sizing: border-box;
  }
  
  & + .settingspane {
    margin-top: 4em;
  }

  .desclogo {
    height: 4em;
    width: 4em;
    object-fit: contain;
    object-position: center;
    position: absolute;
    top: 1em;
    right: 1em;
  }

  .globalheader {
    font-weight: 300;
    font-size: 3em;
    line-height: 1.3;
    margin-bottom: 1em;

    img {
      height: 2em;
      margin-right: 1em;
    }
  }

  small, .optsmall {
    opacity: .3;

    &:hover {
      opacity: 1;
    }
  }
  .optcaption {
    font-weight: 300;
    font-size: 1.4em;
  }
  .optdescription {
    
  }

  .block {
    display: grid;
    position: relative;

    grid-template-columns: 50px 1fr;
    grid-template-rows: 50px 1fr;
    grid-column-gap: .5em;
    
    grid-template-areas: "check mainheader"
                         ".     content";
                         
    border: 1px solid #333;
    padding: 1em .5em;

    > * {
      vertical-align: middle;
    }
    
    & + .block {
      border-top: none;
    }
                         
    > .enable {
      grid-area: check;
      display: flex;
      justify-content: center;
      align-items: center;
      justify-items: center;
      position: relative;
      top: -.25em;
    }
    
    .mainheader {
      grid-area: mainheader;
      font-weight: 100;
      font-size: 3em;
      line-height: 1;
    }

    .content {
      grid-area: content;
      display: block;
      padding: 1em 0;
      line-height: 1.4;
      
      .optionstable {
        display: block;
        padding: 1em;
        
        .set {
          /* 1 row, 2 cols */
          display: grid;
          grid-template-columns: 1fr .75fr;
          grid-template-rows: 1fr;
          grid-column-gap: 2em;
          grid-row-gap: 1em;
          
          .checkboxarea {
            padding: .5em 0;
            
            > * {
              vertical-align: middle;

              & + * {
                margin-left: 2em;
              }
            }
          }

          /* n rows, 1 col */
          @media (max-width: 500px) {
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: auto;

            > * {
              height: auto;
            }
          }
        }
        
        .set + .set {
          border-top: 1px solid #333;
          margin-top: 1em;
          padding-top: 1em;
        }
      }
    }
  
  }
}


input, button, a.button {
  background: #333;
  border: 1px solid #39464e;
  border-radius: 4px;
  color: inherit;
  padding: .25em .5em;
  
  font-family: inherit;
  
  &:hover {
    background: #666;
  }
}

.set > * {
  position: relative;
  
  > * {
    box-sizing: border-box;
    
    &[type] { 
      width: 100%;
    }
  }
}

input[type="checkbox"] + .checkmark {
  border-radius: 4px;
}

.set input[type="checkbox"] + .checkmark {
  width: 1em !important;
  height: 1em !important;
}

a {
  text-decoration: underline;
  cursor: pointer;
}

button, a.button {
  background: #2196F3;
  cursor: pointer;
  font-weight: 300;
  width: auto;
  border: 0;
  text-decoration: none;

  &:hover {
    background: dodgerblue;
  }
}

.usersettings {
  position: absolute;
  top: 2em;
  right: 2em;
}



@checkboxSize: 60%;

/* https://www.w3schools.com/howto/howto_css_custom_checkbox.asp */

/* Customize the label (the container) */
label.enable {
  display: inline-block;
  position: relative;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;


  /* Hide the browser's default checkbox */
  input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  /* Create a custom checkbox */
  .checkmark {
    position: relative;
    top: 0;
    left: 0;
    height: @checkboxSize;
    width: @checkboxSize;
    background-color: #333;
  }

  /* On mouse-over, add a grey background color */
  &:hover input ~ .checkmark {
    background-color: #666;
  }

  /* When the checkbox is checked, add a blue background */
  input:checked ~ .checkmark {
    background-color: #2196F3;
  }

  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;

    /* Style the checkmark/indicator   --- define it here, so it can be modified */
    left: 50%;
    top: 50%;
    width: 20%;
    height: 40%;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg) translate(-100%, -20%);
    -ms-transform: rotate(45deg) translate(-100%, -20%);
    transform: rotate(45deg) translate(-100%, -20%);
  }

  input.ison ~ .checkmark:after {
    display: block;
    opacity: .5;
  }
  input.isoff:not([isset]) ~ .checkmark:after {
    display: block;
    opacity: .5;

    width: 40%;
    height: 0%;
    transform: rotate(0deg) translate(-50%, -20%);
  }

  /* Show the checkmark when checked */
  input:checked ~ .checkmark:after {
    display: block;
    opacity: 1;

    /* Style the checkmark/indicator -  overwrite, to IF CHECKED*/
    left: 50%;
    top: 50%;
    width: 20%;
    height: 40%;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg) translate(-100%, -20%);
    -ms-transform: rotate(45deg) translate(-100%, -20%);
    transform: rotate(45deg) translate(-100%, -20%);
  }

}